(function() {
    var modules = {};
    function isFunction(obj) {
        return Object.prototype.toString.call(obj) === "[object Function]";
    }
    function define(name, deps, factory) {
        if (modules[name]) {
            throw new Error("Module " + name + " has been defined already.");
        }
        if (isFunction(deps)) {
            factory = deps;
        }
        modules[name] = {
            factory: factory,
            inited: false,
            exports: null
        };
    }
    function run(name) {
        var module, exports, mod, ret;
        module = modules[name];
        exports = {};
        mod = {
            exports: {}
        };
        if (isFunction(module.factory)) {
            ret = module.factory.call(undefined, require, exports, mod);
            if (ret !== undefined) {
                module.exports = ret;
            } else {
                if (mod.hasOwnProperty("exports") && typeof mod.exports === "object" && mod.exports instanceof Object === true) {
                    var tag = false;
                    var k, v;
                    for (k in mod.exports) {
                        if (mod.exports.hasOwnProperty(k)) {
                            tag = true;
                        }
                    }
                    if (tag === false) {
                        module.exports = exports;
                    } else {
                        module.exports = mod.exports;
                    }
                } else {
                    module.exports = mod.exports;
                }
            }
        } else {
            throw new Error("Module " + name + " has no factory.");
        }
        module.inited = true;
    }
    function require(name) {
        var module;
        module = modules[name];
        if (!module) {
            throw new Error("Module " + name + " is not defined.");
        }
        if (module.inited === false) {
            run(name);
        }
        return module.exports;
    }
    define("D:/dev/mdevApp/test/build/core/core.js", function(require, exports, module) {
        var $$data = require("D:/dev/mdevApp/test/build/core/util/data-center.js"), $$router = require("D:/dev/mdevApp/test/build/core/router/router.js"), $$api = require("D:/dev/mdevApp/test/build/core/api/api.js"), $$query = require("D:/dev/mdevApp/test/build/util/query.js");
        $$data.set("pageConfig", require("D:/dev/mdevApp/test/build/config.js"));
        console.log($$data.get("pageConfig"));
        var render = function(pageName, data) {
            if ($$data.get("currentPage")) {
                $$data.set("prePage", $$data.get("currentPage"));
            }
            if (!$$api.router) {
                $$api.router = $$router;
            }
            $$data.set("currentPage", pageName);
            require("D:/dev/mdevApp/test/build/core/router/render.js")(pageName);
            require("D:/dev/mdevApp/test/build/core/router/load-module.js")(pageName, data, $$api);
        };
        History.Adapter.bind(window, "statechange", function() {
            var State = History.getState(), pageName = State.data.pageName || "index";
            render(pageName, State.data.data);
        });
        var firstPageName = $$query.getParams(location.search, "pageName") || "index";
        render(firstPageName, {
            firstRender: true
        });
    });
    define("D:/dev/mdevApp/test/build/core/util/data-center.js", function(require, exports, module) {
        var storage = {};
        module.exports = {
            set: function(ns, val) {
                var dep = ns.split(":");
                var obj = storage;
                var i;
                for (i = 0; i < dep.length; i++) {
                    if (obj[dep[i]] === undefined) {
                        obj[dep[i]] = {};
                    }
                    if (i === dep.length - 1) {
                        obj[dep[i]] = val;
                    } else {
                        obj = obj[dep[i]];
                    }
                }
                return val;
            },
            get: function(ns) {
                if (ns === "/") {
                    return storage;
                }
                var dep = ns.split(":");
                var obj = storage;
                var i;
                for (i = 0; i < dep.length; i++) {
                    obj = obj[dep[i]];
                    if (obj === undefined) {
                        break;
                    }
                }
                return obj;
            }
        };
    });
    define("D:/dev/mdevApp/test/build/core/router/router.js", function(require, exports, module) {
        var $$data = require("D:/dev/mdevApp/test/build/core/util/data-center.js"), $$api = require("D:/dev/mdevApp/test/build/core/api/api.js"), $$query = require("D:/dev/mdevApp/test/build/util/query.js");
        var router = {
            go: function(pageName, data, isNotRecordHistory) {
                if (isNotRecordHistory !== true) {
                    History.pushState({
                        pageName: pageName,
                        data: data
                    }, $$data.get("pageConfig:" + pageName).title, "?" + $$query.addParam(location.search, "pageName", pageName));
                } else {
                    History.replaceState({
                        pageName: pageName,
                        data: data
                    }, $$data.get("pageConfig:" + pageName).title, "?" + $$query.addParam(location.search, "pageName", pageName));
                }
            },
            back: function(num) {
                _.isNumber(num) ? History.back(num) : History.back();
            },
            forward: function(num) {
                _.isNumber(num) ? History.go(num) : History.go();
            }
        };
        module.exports = router;
    });
    define("D:/dev/mdevApp/test/build/core/api/api.js", function(require, exports, module) {
        var api = {};
        module.exports = api;
    });
    define("D:/dev/mdevApp/test/build/util/query.js", function(require, exports, module) {
        var querystring = {
            stringToObject: function(str) {
                var obj = {};
                str = str.replace(/.*\?/, "");
                if (typeof str === "string") {
                    str = decodeURIComponent(str);
                    var arrtmp = str.split("&"), item, i, j;
                    for (i = 0; i < arrtmp.length; i++) {
                        item = arrtmp[i];
                        j = item.indexOf("=");
                        if (item.length > 0) {
                            if (j < 0) {
                                obj[item] = "";
                            } else if (j > 0) {
                                obj[item.substring(0, j)] = item.substr(j + 1);
                            }
                        }
                    }
                }
                return obj;
            },
            objectToString: function(obj) {
                return $.param(obj);
            },
            addParam: function(query, key, val) {
                query = query.replace(/.*\?/, "");
                var obj = this.stringToObject(query), temp = {};
                temp[key] = val;
                return this.objectToString(_.extend(obj, temp));
            },
            getParams: function(query, key) {
                query = query.replace(/.*\?/, "");
                return this.stringToObject(query)[key];
            }
        };
        module.exports = querystring;
    });
    define("D:/dev/mdevApp/test/build/config.js", function(require, exports, module) {
        module.exports = {
            index: {
                title: "主页",
                modules: [ "main-test", "footer-test.0" ],
                level: 1
            },
            tap2: {
                title: "B",
                modules: [ "main-test", "footer-test.1" ],
                level: 1
            },
            tap3: {
                title: "C",
                modules: [ "main-test", "footer-test.2" ],
                level: 1
            },
            tap4: {
                title: "D",
                modules: [ "main-test", "footer-test.3" ],
                level: 1
            },
            "demo-level-2": {
                title: "2级页",
                modules: [ "main-test-level-2" ],
                level: 2
            },
            "demo-level-3": {
                title: "3级页",
                modules: [ "main-test-level-3" ],
                level: 3
            },
            newPage: {
                title: "3级页",
                modules: [ "main-test-level-3" ],
                level: 3
            }
        };
    });
    define("D:/dev/mdevApp/test/build/core/router/render.js", function(require, exports, module) {
        var $$data = require("D:/dev/mdevApp/test/build/core/util/data-center.js"), $$tpl = require("D:/dev/mdevApp/test/build/static/tpl.js");
        var render = function(pageName) {
            var pageDetail = $$data.get("pageConfig:" + pageName), $currentWrapper = pageDetail.level === 1 ? $(".doc.level-1 .main") : $(".doc.level-2.active .main"), prePageDetail = $$data.get("pageConfig:" + $$data.get("prePage")), currentPageDetail = pageDetail;
            if (prePageDetail && prePageDetail.level > 1 && currentPageDetail.level > 1) {
                $currentWrapper = $(".doc.level-2").not(".active").find(".main");
            }
            $currentWrapper.find('div[node-type="module"]').hide();
            $currentWrapper.css("opacity", 0);
            pageDetail.modules.forEach(function(item) {
                var moduleName = item.split(".")[0], moduleStatus = item.split(".")[1] || 0, tpl = $$tpl[moduleName], $module = $currentWrapper.find('div[node-type="module"]').filter(".module-" + moduleName);
                if (currentPageDetail.level > 1) {
                    $module = $module.length ? $module : $(".doc.level-2 .main").find('div[node-type="module"]').filter(".module-" + moduleName);
                }
                $module = $module.length ? $module : $(velocityjs.render(tpl, {
                    status: moduleStatus
                }));
                $module.show();
                $currentWrapper.append($module);
            });
        };
        module.exports = render;
    });
    define("D:/dev/mdevApp/test/build/static/tpl.js", function(require, exports, module) {
        var page = {
            "footer-test": require("D:/dev/mdevApp/test/build/modules/footer-test/footer-test.html.js"),
            "main-test": require("D:/dev/mdevApp/test/build/modules/main-test/main-test.html.js"),
            "main-test-level-2": require("D:/dev/mdevApp/test/build/modules/main-test-level-2/main-test-level-2.html.js"),
            "main-test-level-3": require("D:/dev/mdevApp/test/build/modules/main-test-level-3/main-test-level-3.html.js")
        };
        module.exports = page;
    });
    define("D:/dev/mdevApp/test/build/modules/footer-test/footer-test.html.js", function(require, exports, module) {
        "use strict";
        var templateArray;
        templateArray = [];
        templateArray.push("#*");
        templateArray.push("作者: 郭豪");
        templateArray.push("修改: 郭豪 2016/6/14");
        templateArray.push("*#");
        templateArray.push('<div class="module-footer-test" node-type="module">');
        templateArray.push("    #if ($status == 1)");
        templateArray.push('        <div class="status-1">');
        templateArray.push("        </div>");
        templateArray.push("    #elseif ($status == 2)");
        templateArray.push('        <div class="status-2">');
        templateArray.push("        </div>");
        templateArray.push("    #else");
        templateArray.push('        <div class="status-0">');
        templateArray.push("        </div>    ");
        templateArray.push("    #end");
        templateArray.push("</div>");
        return templateArray.join("\n");
    });
    define("D:/dev/mdevApp/test/build/modules/main-test/main-test.html.js", function(require, exports, module) {
        "use strict";
        var templateArray;
        templateArray = [];
        templateArray.push("#*");
        templateArray.push("作者: 郭豪");
        templateArray.push("修改: 郭豪 2016/6/14");
        templateArray.push("*#");
        templateArray.push('<div class="module-main-test" node-type="module">');
        templateArray.push("    #if ($status == 1)");
        templateArray.push('        <div class="status-1">');
        templateArray.push("        </div>");
        templateArray.push("    #elseif ($status == 2)");
        templateArray.push('        <div class="status-2">');
        templateArray.push("        </div>");
        templateArray.push("    #else");
        templateArray.push('        <div class="status-0">');
        templateArray.push("            ## 模块状态0(默认状态)");
        templateArray.push("            <h1>一级页</h1>");
        templateArray.push('            <button class="jump-2">点击跳转到2级页</button>');
        templateArray.push('            <div class="bg-pic"></div>');
        templateArray.push("        </div>");
        templateArray.push("    #end");
        templateArray.push("</div>");
        return templateArray.join("\n");
    });
    define("D:/dev/mdevApp/test/build/modules/main-test-level-2/main-test-level-2.html.js", function(require, exports, module) {
        "use strict";
        var templateArray;
        templateArray = [];
        templateArray.push("#*");
        templateArray.push("作者: 郭豪");
        templateArray.push("修改: 郭豪 2016/6/14");
        templateArray.push("*#");
        templateArray.push('<div class="module-main-test-level-2" node-type="module">');
        templateArray.push("    <h1>二级页</h1>");
        templateArray.push('    <button class="backToTop"><<点击回到一级页</button>');
        templateArray.push('    <button class="GoToThird">点击跳到三级页>></button>');
        templateArray.push("</div>");
        return templateArray.join("\n");
    });
    define("D:/dev/mdevApp/test/build/modules/main-test-level-3/main-test-level-3.html.js", function(require, exports, module) {
        "use strict";
        var templateArray;
        templateArray = [];
        templateArray.push("#*");
        templateArray.push("作者: 郭豪");
        templateArray.push("修改: 郭豪 2016/6/14");
        templateArray.push("*#");
        templateArray.push('<div class="module-main-test-level-3" node-type="module">');
        templateArray.push("    <h1>三级页</h1>");
        templateArray.push('    <button class="backToSecond"><<点击回到二级页</button>');
        templateArray.push('    <button class="backToTop"><<点击回到一级页</button>');
        templateArray.push("</div>");
        return templateArray.join("\n");
    });
    define("D:/dev/mdevApp/test/build/core/router/load-module.js", function(require, exports, module) {
        var $$data = require("D:/dev/mdevApp/test/build/core/util/data-center.js"), debug = window.mdevApp.debug, $$module = require("D:/dev/mdevApp/test/build/core/router/module.js"), modules = {};
        var loadModule = function(pageName, data, api) {
            var pageDetail = $$data.get("pageConfig:" + pageName), num = 0, $currentWrapper = pageDetail.level === 1 ? $(".doc.level-1 .main") : $(".doc.level-2.active .main"), moduleList = _.map(pageDetail.modules, function(item) {
                return item.split(".")[0];
            }), newModuleList = _.difference(moduleList, $$data.get("readyModule")), currentPageDetail = pageDetail, prePageDetail = $$data.get("pageConfig:" + $$data.get("prePage"));
            if (prePageDetail && prePageDetail.level > 1 && currentPageDetail.level > 1) {
                $currentWrapper = $(".doc.level-2").not(".active").find(".main");
            }
            $$data.set("readyModule", _.union(moduleList, $$data.get("readyModule")));
            newModuleList = _.map(newModuleList, function(item) {
                return "./modules/" + item + "/" + item + ".js";
            });
            var moduleReady = function() {
                if ($(".global_loading").css("display") === "block") {
                    $(".main").css("opacity", 1);
                    require("D:/dev/mdevApp/test/build/core/router/page-animate.js")(pageName);
                    window.setTimeout(function() {
                        $(".global_loading_w").transition({
                            opacity: 0,
                            duration: 500,
                            easing: "in-out",
                            complete: function() {
                                $(".global_loading_w").hide();
                            }
                        });
                    }, 300);
                } else {
                    $(".main").css("opacity", 1);
                    require("D:/dev/mdevApp/test/build/core/router/page-animate.js")(pageName);
                }
            };
            if (!newModuleList.length) {
                moduleReady();
                return;
            }
            newModuleList.forEach(function(item) {
                var moduleName = _.last(item.split("/")).replace(".js", ""), $module = $currentWrapper.find('div[node-type="module"]').filter(".module-" + moduleName);
                var done = function() {
                    $$module.set(moduleName, window.mdevApp.exports(data, $module, api, $$module.get("/")));
                    num++;
                    if (num === newModuleList.length) {
                        moduleReady();
                    }
                };
                if (debug === "true") {
                    seajs.use([ item.replace(".js", ".css"), item ], done);
                } else {
                    $.when($.loadCss(item.replace(".js", ".css")), $.loadJs(item.replace(".js", ".min.js"))).done(done);
                }
            });
        };
        module.exports = loadModule;
    });
    define("D:/dev/mdevApp/test/build/core/router/module.js", function(require, exports, module) {
        var $$data = require("D:/dev/mdevApp/test/build/core/util/data-center.js"), debug = $.cookie()["debug_cookie"], moduleTemp = {};
        module.exports = {
            set: function(moduleName, exportCb) {
                if (!$$data.get("modules")) {
                    $$data.set("modules", {});
                }
                moduleTemp.export = exportCb;
                $$data.set("modules:" + moduleName, moduleTemp);
            },
            get: function(moduleName) {
                if (moduleName === "/") {
                    return $$data.get("modules");
                } else {
                    return $$data.get("modules:" + moduleName);
                }
            }
        };
    });
    define("D:/dev/mdevApp/test/build/core/router/page-animate.js", function(require, exports, module) {
        var $$data = require("D:/dev/mdevApp/test/build/core/util/data-center.js"), $$easing = require("D:/dev/mdevApp/test/build/core/util/easing.js");
        var pageForward = function() {
            var prePage = $$data.get("prePage"), currentPage = $$data.get("currentPage"), prePageDetail = $$data.get("pageConfig:" + prePage), currentPageDetail = $$data.get("pageConfig:" + currentPage), $current = currentPageDetail.level === 1 ? $(".doc.level-1") : $(".doc.level-2.active"), $pre = prePage ? prePageDetail.level === 1 ? $(".doc.level-1") : $(".doc.level-2.active") : undefined;
            if (!prePage) {
                if (currentPageDetail.level > 1) {
                    $(".doc.level-1").css("transform", "translate3d(-" + $(window).width() * .32 + "px,0,0)").hide();
                    $current.css("transform", "translate3d(0,0,0)").css("position", "static");
                    if (currentPageDetail.level === 3) {
                        $(".doc.level-2").not(".active").css("position", "static").css("transform", "translate3d(-" + $(window).width() * .32 + "px,0,0)").hide();
                    }
                }
            } else {
                if (prePageDetail.level === 1) {
                    if (currentPageDetail.level === 1) {} else {
                        $(".doc.level-2").not(".active").css("position", "fixed").css("transform", "translate3d(100%,0,0)");
                        $$easing.easeIn($current, $pre);
                    }
                } else {
                    if (currentPageDetail.level === 1) {
                        $$easing.easeOut($current, $pre);
                    } else {
                        $current = $(".doc.level-2").not(".active");
                        $pre.removeClass("active");
                        $current.addClass("active");
                        $pre.show();
                        $current.show();
                        if (currentPageDetail.level >= prePageDetail.level) {
                            $$easing.easeIn($current, $pre);
                        } else {
                            $$easing.easeOut($current, $pre);
                        }
                    }
                }
            }
        };
        module.exports = pageForward;
    });
    define("D:/dev/mdevApp/test/build/core/util/easing.js", function(require, exports, module) {
        var isEaseIn = false, isEaseOut = false;
        var easing = {
            easeIn: function($wrapper, $pre) {
                isEaseIn = true;
                $pre.transition({
                    transform: "translate3d(-" + $(window).width() * .32 + "px,0,0)",
                    duration: 300,
                    easing: "in-out",
                    complete: function() {
                        if (isEaseOut) {
                            return;
                        }
                        $wrapper.css("position", "static");
                    }
                });
                $wrapper.transition({
                    transform: "translate3d(0,0,0)",
                    duration: 300,
                    easing: "in-out",
                    complete: function() {
                        if (isEaseOut) {
                            return;
                        }
                        $pre.hide();
                    }
                });
            },
            easeOut: function($wrapper, $pre) {
                isEaseOut = true;
                $pre.css("position", "fixed");
                $wrapper.show();
                $pre.transition({
                    transform: "translate3d(100%,0,0)",
                    duration: 300,
                    easing: "in-out",
                    complete: function() {}
                });
                $wrapper.transition({
                    transform: "translate3d(0,0,0)",
                    duration: 300,
                    easing: "in-out",
                    complete: function() {
                        isEaseOut = false;
                    }
                });
            }
        };
        module.exports = easing;
    });
    run("D:/dev/mdevApp/test/build/core/core.js");
})();