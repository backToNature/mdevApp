module.exports = (function (fs, path, http) {
    var _pub_static = function () {
        var _pri = {};
        var _pub = {};

        var _init = function () {
        };

        _pri['formatReq'] = function (data) {
            var req = {};

            var url = require('url');
            var urlInfo = url.parse(decodeURIComponent(data.query.url));

            // basic
            req.host = urlInfo.host;
            req.hostname = urlInfo.hostname;
            req.port = urlInfo.port || 80;
            req.method = data.method;
            req.path = urlInfo.path;

            // query
            var querystring = require('querystring');
            delete data.query.url;
            req.path += '?' + querystring.stringify(data.query);

            // headers
            req.headers = {
                'user-agent': data.headers['user-agent'],
                // 'accept-encoding': data.headers['accept-encoding'], 
                'accept-language': data.headers['accept-language'],
                'cookie': data.headers['cookie']
            };

            // body
            req.body = data.body;
            if (data.method === 'POST') {
                req.headers['Content-Type'] = 'application/x-www-form-urlencoded';
                req.headers['Content-Length'] = req.body.length;
            }

            return req;
        };

        _pub['run'] = function (reqInfo, callback) {
            var reqOpt = _pri.formatReq(reqInfo);
            var resOpt = {
                body: ''
            };

            var req = http.request(reqOpt, function (res) {
                res.on('data',function(d){
                    resOpt.body += d;
                })
                .on('end', function(){
                    resOpt.headers = res.headers;
                    // cookie
                    resOpt.headers['set-cookie'] && resOpt.headers['set-cookie'].forEach(function (item, i) {
                        resOpt.headers['set-cookie'][i] = item.split(';')[0];
                    });
                    callback(resOpt);
                });
            });
            req.on('error', function(e) {
                resOpt.body += 'Proxy Request Error: ' + e.message;
                callback(resOpt);
            });
            if (reqOpt.method === 'POST') {
                req.write(reqOpt.body);
            }
            req.end();
        };

        if (this === 'test') {
            _pub._pri = _pri;
            _pub._init = _init;
        } else {
            _init.apply(_pub, arguments);
        }

        return _pub;
    };

    return new _pub_static();
})(
    require('fs'),
    require('path'),
    require('http')
);
